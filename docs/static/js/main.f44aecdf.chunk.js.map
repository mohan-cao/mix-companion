{"version":3,"sources":["Spotify.js","App.js","serviceWorker.js","index.js"],"names":["CamelotKeyToIntegerAndMode","1A","1B","2A","2B","3A","3B","4A","4B","5A","5B","6A","6B","7A","7B","8A","8B","9A","9B","10A","10B","11A","11B","12A","12B","getTokenInNewWindow","client_id","redirect_url","scopes","nonce","window","crypto","getRandomValues","Uint32Array","callable_endpoint","endpoint","Array","isArray","join","Promise","resolve","reject","popup","open","spotifyCallback","token","expires","state","parseInt","close","concat","_callee","resp","regenerator_default","a","wrap","_context","prev","next","fetch","headers","Accept","Content-Type","Authorization","sent","status","abrupt","json","stop","_callee2","_ref","genres","bpm","key","_context2","console","log","formatKey","number","isMinor","DEFAULT_TEMPO","DEFAULT_KEY_NUM","DEFAULT_KEY_IS_MINOR","camelotMinorKey","camelotMajorKey","spanJoiner","b","length","push","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","localStorage","getItem","bpmSearch","availableGenres","selectedGenre","results","queryParams","QueryString","parse","location","hash","access_token","expires_in","opener","expiry","Date","getTime","setNewToken","setItem","setState","_this2","then","e","str","val","target","value","slice","toLowerCase","_this3","_x","_getGenres","apply","arguments","getGenres","x","catch","getToken","_this4","_this$state","_x2","_x3","_getRecommendationsBasedOnAttributes","getRecommendationsBasedOnAttributes","tracks","map","track","i","react_default","createElement","artists","art","href","external_urls","spotify","name","reduce","_this5","_this$state2","className","htmlFor","onChange","setKey","label","type","defaultValue","parseFloat","onClick","startSearch","mapResults","React","Component","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f44aecdf.chunk.js","sourcesContent":["const CamelotKeyToIntegerAndMode = {\r\n  \"1A\":  [8,  0],   \"1B\":  [8,  1],\r\n  \"2A\":  [3,  0],   \"2B\":  [3,  1],\r\n  \"3A\":  [10, 0],   \"3B\":  [10, 1],\r\n  \"4A\":  [5,  0],   \"4B\":  [5,  1],\r\n  \"5A\":  [0,  0],   \"5B\":  [0,  1],\r\n  \"6A\":  [7,  0],   \"6B\":  [7,  1],\r\n  \"7A\":  [2,  0],   \"7B\":  [2,  1],\r\n  \"8A\":  [9,  0],   \"8B\":  [9,  1],\r\n  \"9A\":  [4,  0],   \"9B\":  [4,  1],\r\n  \"10A\": [11, 0],   \"10B\": [11, 1],\r\n  \"11A\": [6,  0],   \"11B\": [6,  1],\r\n  \"12A\": [1,  0],   \"12B\": [1,  1],\r\n}\r\n\r\nfunction secureMathRandom() {\r\n  // Divide a random UInt32 by the maximum value (2^32 -1) to get a result between 0 and 1\r\n  return window.crypto.getRandomValues(new Uint32Array(1))[0] // 4294967295;\r\n}\r\n\r\nexport function getTokenInNewWindow(client_id, redirect_url, scopes) {\r\n  const endpoint = \"https://accounts.spotify.com/authorize\"\r\n  let nonce = secureMathRandom();\r\n  let callable_endpoint = endpoint + \"?response_type=token\"\r\n  callable_endpoint += \"&redirect_uri=\" + redirect_url\r\n  callable_endpoint += \"&client_id=\" + client_id\r\n  if (scopes) callable_endpoint += \"&scopes=\" + (Array.isArray(scopes) ? scopes.join(' ') : scopes)\r\n  callable_endpoint += \"&state=\" + nonce\r\n\r\n  return new Promise((resolve, reject) => {\r\n    let popup = window.open(callable_endpoint, 'Login with Spotify', 'width=800,height=600')\r\n    window.spotifyCallback = (token, expires, state) => {\r\n      state = parseInt(state)\r\n      popup.close()\r\n      if (state !== nonce) {\r\n        reject(`Nonce is invalid, expected: ${nonce} but got ${state}`)\r\n      } else {\r\n        resolve({ token: token, expires: expires })\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nexport async function getGenres(token) {\r\n  const endpoint = \"https://api.spotify.com/v1/recommendations/available-genre-seeds\"\r\n  const resp = await fetch(endpoint, {\r\n    headers: {\r\n      \"Accept\": \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      \"Authorization\": \"Bearer \" + token\r\n    }\r\n  })\r\n  if (resp.status !== 200) return Promise.reject()\r\n  return resp.json()\r\n}\r\n\r\nexport async function getRecommendationsBasedOnAttributes(token, { genres, bpm, key }) {\r\n  const endpoint = \"https://api.spotify.com/v1/recommendations\"\r\n  let callable_endpoint = endpoint + \"?seed_genres=\" + (Array.isArray(genres) ? genres.join(',') : genres)\r\n  callable_endpoint += \"&min_key=\" + CamelotKeyToIntegerAndMode[key][0] + \"&max_key=\" + CamelotKeyToIntegerAndMode[key][0]\r\n  callable_endpoint += \"&min_mode=\" + CamelotKeyToIntegerAndMode[key][1] + \"&max_mode=\" + CamelotKeyToIntegerAndMode[key][1]\r\n  callable_endpoint += \"&target_tempo=\" + bpm\r\n  console.log(callable_endpoint)\r\n  const resp = await fetch(callable_endpoint, {\r\n    headers: {\r\n      \"Accept\": \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      \"Authorization\": \"Bearer \" + token\r\n    }\r\n  })\r\n  if (resp.status !== 200) return Promise.reject()\r\n  return resp.json()\r\n}","import React from 'react';\nimport './App.css';\nimport QueryString from 'query-string'\nimport { getTokenInNewWindow, getRecommendationsBasedOnAttributes, getGenres } from './Spotify';\n\nconst formatKey = (number, isMinor) => number + (isMinor ? \"B\" : \"A\")\nconst stringToKey = (str) => [ parseInt(str.slice(0, -1)), (str.slice(-1).toLowerCase() === \"b\" ? true : false)]\nconst DEFAULT_TEMPO = 120\nconst DEFAULT_KEY_NUM = 1\nconst DEFAULT_KEY_IS_MINOR = false\nconst website = \"https://www.mohancao.me/mix-companion\"\n\nconst camelotMinorKey = [\n  \"1A\",    \n  \"2A\",    \n  \"3A\",    \n  \"4A\",    \n  \"5A\",    \n  \"6A\",    \n  \"7A\",    \n  \"8A\",    \n  \"9A\",    \n  \"10A\",   \n  \"11A\",   \n  \"12A\",\n]\n\nconst camelotMajorKey = [\n  \"1B\", \n  \"2B\", \n  \"3B\", \n  \"4B\", \n  \"5B\", \n  \"6B\", \n  \"7B\", \n  \"8B\", \n  \"9B\", \n  \"10B\",\n  \"11B\",\n  \"12B\",\n]\n\nconst spanJoiner = (a, b) => {\n  if (a.length === 0) a.push(b)\n  else a.push(', ', b)\n  return a\n}\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      number: DEFAULT_KEY_NUM,\n      isMinor: DEFAULT_KEY_IS_MINOR,\n      token: window.localStorage.getItem(\"token\"),\n      expires: window.localStorage.getItem(\"expires\"),\n      bpmSearch: DEFAULT_TEMPO,\n      availableGenres: ['country', 'classical', 'rock', 'pop', 'blues', 'r-n-b'],\n      selectedGenre: 'country',\n      results: 'Results go here',\n    }\n  }\n\n  componentDidMount() {\n    /// block start\n    {\n      let queryParams = QueryString.parse(window.location.hash)\n      if (!queryParams) return;\n      let { access_token, expires_in, state } = queryParams;\n      if (window.opener && window.opener.spotifyCallback) {\n        window.opener.spotifyCallback(access_token, expires_in, state)\n      } else if (access_token && expires_in) {\n        let expiry = (new Date().getTime() + (parseInt(expires_in) * 1000 * 0.9))\n        this.setNewToken(access_token, expiry) // always refresh a little earlier than needed (0.9*actual expiry time)\n      }\n      window.location.hash = \"\"\n    }\n    /// block end\n  }\n\n  setNewToken(token, expires) {\n    if (window.localStorage.getItem(\"token\") === token){\n      return;\n    } else {\n      window.localStorage.setItem(\"token\", token)\n      window.localStorage.setItem(\"expires\", expires)\n      this.setState({ token: token, expires: expires })\n    }\n  }\n\n  getToken() {\n    getTokenInNewWindow(\"4a4e5068f705407480266c7e7c8d7dfa\", website).then(({ token, expires }) => {\n      this.setNewToken(token, expires)\n    })\n  }\n\n  setKey(e) {\n    const val = stringToKey(e.target.value)\n    this.setState({ number: val[0] ? val[0] : DEFAULT_KEY_NUM, isMinor: val[1] ? val[1] : DEFAULT_KEY_IS_MINOR })\n  }\n\n  getGenres() {\n    getGenres(this.state.token)\n    .then(x => this.setState({ availableGenres: x.genres }))\n    .catch(() => {\n      // token failed\n      this.getToken();\n    })\n  }\n\n  startSearch() {\n    const { token, selectedGenre, bpmSearch, number, isMinor } = this.state;\n    getRecommendationsBasedOnAttributes(token, { genres: selectedGenre, bpm: bpmSearch, key: formatKey(number, isMinor)})\n    .then(x => this.setState({ results: x }))\n    .catch(() => {\n      // token expired\n      this.getToken()\n    })\n  }\n\n  mapResults(results) {\n    if (!results || !results.tracks || results.tracks.length < 1) return\n    return results.tracks.map((track, i) => (\n      <div key={i}>\n        <h1>{track.artists.map((art, i) => <a key={i} href={art.external_urls.spotify}>{art.name}</a>).reduce(spanJoiner, [])}</h1>\n        <h2><a href={track.external_urls.spotify}>{track.name}</a></h2>\n      </div>\n    ))\n  }\n\n  render() {\n    const { number, isMinor, token, results, selectedGenre, availableGenres } = this.state;\n    if (!token) return <button onClick={this.getToken}>Login to Spotify to use this app</button>\n    return (\n      <div className=\"App\">\n        <h1>{formatKey(number, isMinor)}</h1>\n        <div>\n          <label htmlFor=\"key\">Enter key: </label>\n          <select name=\"key\" value={formatKey(number, isMinor)} onChange={(e) => this.setKey(e)}>\n            <optgroup label=\"Minor keys\">{camelotMinorKey.map((x) => <option key={x} value={x}>{x}</option>)}</optgroup>\n            <optgroup label=\"Major keys\">{camelotMajorKey.map((x) => <option key={x} value={x}>{x}</option>)}</optgroup>\n          </select>\n        </div>\n        <div>\n          <label htmlFor=\"bpm\">Enter BPM: </label><input type=\"number\" defaultValue={DEFAULT_TEMPO} name=\"bpm\" onChange={(e) => this.setState({ bpmSearch: parseFloat(e.target.value ? e.target.value : DEFAULT_TEMPO) })} />\n        </div>\n        <div>\n          <select value={selectedGenre} onChange={(e) => this.setState({ selectedGenre: e.target.value })}>\n            {(availableGenres && availableGenres.length > 0 ?\n              availableGenres.map((x) => <option key={x} value={x}>{x}</option>)\n              :\n              <option>No genres available</option>\n            )}\n          </select>\n          <button onClick={() => this.getGenres()}>Fetch all genres</button>\n        </div>\n        <div>\n          <button onClick={() => this.startSearch()}>Start search</button>\n        </div>\n        <div>\n          {this.mapResults(results)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}